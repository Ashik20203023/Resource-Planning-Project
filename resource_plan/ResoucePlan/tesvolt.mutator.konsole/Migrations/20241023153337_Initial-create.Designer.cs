// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tesvolt.mutator.console;

#nullable disable

namespace tesvolt.mutator.konsole.Migrations
{
    [DbContext(typeof(TesvoltMutatorDbContext))]
    [Migration("20241023153337_Initial-create")]
    partial class Initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tesvolt.dbmodels.app.AttendanceDetailEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AttendanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("AttendanceEntryId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceNameId")
                        .HasColumnType("int");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceEntryId");

                    b.HasIndex("ProjectNameId");

                    b.HasIndex("ResourceNameId");

                    b.ToTable("AttendanceDetailEntryModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.AttendanceEntryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjectNameId")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceNameId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectNameId");

                    b.HasIndex("ResourceNameId");

                    b.ToTable("AttendanceEntryModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ProjectModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PoNameId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoNameId");

                    b.ToTable("ProjectModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ResourceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ResourcePlanModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectNameId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ResourceNameId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectNameId");

                    b.HasIndex("ResourceNameId");

                    b.ToTable("ResourcePlanModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.VacationPlanModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfDay")
                        .HasColumnType("int");

                    b.Property<int>("ResourceModelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResourceModelId");

                    b.ToTable("VacationPlanModels");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.AttendanceDetailEntryModel", b =>
                {
                    b.HasOne("tesvolt.dbmodels.app.AttendanceEntryModel", "AttendanceEntry")
                        .WithMany()
                        .HasForeignKey("AttendanceEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tesvolt.dbmodels.app.ProjectModel", "ProjectName")
                        .WithMany()
                        .HasForeignKey("ProjectNameId");

                    b.HasOne("tesvolt.dbmodels.app.ResourceModel", "ResourceName")
                        .WithMany()
                        .HasForeignKey("ResourceNameId");

                    b.Navigation("AttendanceEntry");

                    b.Navigation("ProjectName");

                    b.Navigation("ResourceName");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.AttendanceEntryModel", b =>
                {
                    b.HasOne("tesvolt.dbmodels.app.ProjectModel", "ProjectName")
                        .WithMany()
                        .HasForeignKey("ProjectNameId");

                    b.HasOne("tesvolt.dbmodels.app.ResourceModel", "ResourceName")
                        .WithMany()
                        .HasForeignKey("ResourceNameId");

                    b.Navigation("ProjectName");

                    b.Navigation("ResourceName");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ProjectModel", b =>
                {
                    b.HasOne("tesvolt.dbmodels.app.ResourceModel", "PoName")
                        .WithMany()
                        .HasForeignKey("PoNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PoName");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ResourcePlanModel", b =>
                {
                    b.HasOne("tesvolt.dbmodels.app.ProjectModel", "ProjectName")
                        .WithMany()
                        .HasForeignKey("ProjectNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tesvolt.dbmodels.app.ResourceModel", "ResourceName")
                        .WithMany()
                        .HasForeignKey("ResourceNameId");

                    b.Navigation("ProjectName");

                    b.Navigation("ResourceName");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.VacationPlanModel", b =>
                {
                    b.HasOne("tesvolt.dbmodels.app.ResourceModel", "ResourceModel")
                        .WithMany("VacationPlans")
                        .HasForeignKey("ResourceModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceModel");
                });

            modelBuilder.Entity("tesvolt.dbmodels.app.ResourceModel", b =>
                {
                    b.Navigation("VacationPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
