@using tesvolt.dbmodels.app
@model tesvolt.dbmodels.app.AttendanceEntryModel

@{
    ViewData["Title"] = "Create";
}

<!-- Include jQuery and jQuery UI -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

<div class="row">
    <div class="col-lg-12">
        <div class="card mb-4">
            <div class="card-header bg-secondary text-white">
                <div class="float-start">
                    <strong>AttendanceEntry Create</strong>
                </div>
                <div class="float-end">
                    <a asp-action="Index" class="btn btn-light btn-sm">Back to List</a>
                </div>
            </div>
            <div class="card-body">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="ResourceNameId" class="control-label"></label>
                        <select asp-for="ResourceNameId" class="form-control" asp-items="@(new SelectList(ViewBag.ResourceList, "Id", "Name"))">
                            <option value="">-- Select Resource --</option>
                        </select>
                        <span asp-validation-for="ResourceNameId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="StartDate" class="control-label"></label>
                        <input asp-for="StartDate" class="form-control" id="StartDate" />
                    </div>
                    <div class="form-group">
                        <label asp-for="EndDate" class="control-label"></label>
                        <input asp-for="EndDate" class="form-control" id="EndDate" />
                    </div>
                    <div class="form-group">
                        <label asp-for="ProjectNameId" class="control-label"></label>
                        <select asp-for="ProjectNameId" class="form-control" asp-items="@(new SelectList(ViewBag.ProjectList, "Id", "Name"))">
                            <option value="">-- Select Project --</option>
                        </select>
                        <span asp-validation-for="ProjectNameId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="TaskType" class="control-label"></label>
                        <div class="d-flex">
                            @foreach (var enumValue in Enum.GetValues(typeof(TaskType)).Cast<TaskType>())
                            {
                                <div class="form-check me-3">
                                    <input asp-for="TaskType"
                                           type="radio"
                                           class="form-check-input"
                                           value="@enumValue.ToString()"
                                           id="role_@enumValue"
                                           name="TaskType" />
                                    <label class="form-check-label" for="role_@enumValue">
                                        @enumValue.ToString()
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="form-group float-end">
                        <button type="submit" id="createButton" class="btn btn-success rounded-pill">
                            <span class="cil-contrast"></span> Create
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <script>
            $(function () {
                function calculateNoOfDays() {
                    var startDate = new Date($("#StartDate").val());
                    var endDate = new Date($("#EndDate").val());

                    if (startDate && endDate && endDate >= startDate) {
                        var timeDiff = endDate.getTime() - startDate.getTime();
                        var daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24)) + 1; // Including the start date
                        $("#NoOfDay").val(daysDiff);
                    } else {
                        $("#NoOfDay").val(0);
                    }
                }

                // Initialize datepicker
                $("#StartDate").datepicker({
                    dateFormat: "yy-mm-dd",
                    onSelect: function () {
                        calculateNoOfDays();
                    }
                });

                $("#EndDate").datepicker({
                    dateFormat: "yy-mm-dd",
                    onSelect: function () {
                        calculateNoOfDays();
                    }
                });

                // Calculate on date change
                $("#StartDate, #EndDate").change(function () {
                    calculateNoOfDays();
                });

                // Handle form submission
                $("#createButton").click(function (event) {
                    var resourceSelected = $("#ResourceNameId").val();
                    var projectSelected = $("#ProjectNameId").val();
                    var taskTypeSelected = $("input[name='TaskType']:checked").val();

                    if (!resourceSelected || !projectSelected || !taskTypeSelected) {
                        event.preventDefault(); // Prevent form submission
                        alert("Please select all required fields."); // Alert message
                    }
                });
            });
        </script>
    </div>
</div>
