@model IPagedList<tesvolt.dbmodels.app.ModuleModel>

@using X.PagedList
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Index";
}
@functions {
    public string GetMonthName(int monthNumber)
    {
        return System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(monthNumber);
    }
}

<div class="col-lg-12">
    <div class="card mb-4">
        <div class="card-header bg-secondary text-white">
            <div class="float-start">
                <strong>Module List</strong>
            </div>
            <div class="float-end">
                <a asp-action="Create" class="btn btn-light btn-sm">Create New</a>
            </div>
        </div>
        <div class="card-body">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Project Name</th>
                        <th>Modules</th>
                        <th>Work Start Date</th>
                        <th>Work End Date</th>
                        <th>No Of Days Needed</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var moduleGroup in Model.GroupBy(m => m.Name))
                    {
                        <tr>
                            <td>@moduleGroup.Key.Name</td>
                            <td>
                                <ul class="list-group">
                                    @foreach (var module in moduleGroup)
                                    {
                                        <li class="list-group-item">
                                            <strong>@module.Modules</strong> - @module.NoOfDaysNeeded days<br />
                                            <small>Start: @module.WorkStartDate.ToShortDateString(), End: @module.WorkEndDate.ToShortDateString()</small>
                                        </li>
                                    }
                                </ul>
                            </td>
                            <td>@moduleGroup.Min(m => m.WorkStartDate).ToShortDateString()</td>
                            <td>@moduleGroup.Max(m => m.WorkEndDate).ToShortDateString()</td>
                            <td>@moduleGroup.Sum(m => m.NoOfDaysNeeded)</td> <!-- Sum total NoOfDaysNeeded -->
                            <td>
                                <a asp-action="Edit" asp-route-id="@moduleGroup.First().Id" class="btn btn-light btn-sm">Edit</a>
                                <a asp-action="Details" asp-route-id="@moduleGroup.First().Id" class="btn btn-light btn-sm">Details</a>
                                <form asp-action="Delete" asp-route-id="@moduleGroup.First().Id" method="post" style="display:inline;">
                                    <input type="submit" value="Delete" class="btn btn-light btn-sm" onclick="return confirm('Are you sure you want to delete this module?');" />
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="6">
                            <nav aria-label="Page navigation example">
                                <ul class="pagination justify-content-end">
                                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
                                             new PagedListRenderOptions
                                    {
                                        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                                        DisplayLinkToNextPage = PagedListDisplayMode.Always,
                                        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                        LinkToPreviousPageFormat = "Previous",
                                        LinkToNextPageFormat = "Next",
                                        UlElementClasses = new[] { "pagination" },
                                        LiElementClasses = new[] { "page-item" },
                                        PageClasses = new[] { "page-link" }
                                    })
                                </ul>
                            </nav>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        $(function () {
            // Enable tooltips
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
